version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_STEP_LOG_MAX_SIZE=10485760
        - PIP_DEFAULT_TIMEOUT=100
    container_name: sentient-core-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=sqlite:///./memory_management.db
      - VECTOR_DB_PATH=./memory_vectors
      - POETRY_HTTP_TIMEOUT=300
    volumes:
      - ./.env:/app/.env
      - ./memory_management.db:/app/memory_management.db
      - ./memory_vectors:/app/memory_vectors
    restart: unless-stopped
    networks:
      - sentient-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sentient-core-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - sentient-network

  # Streamlit UI service for development and debugging
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_STEP_LOG_MAX_SIZE=10485760
        - PIP_DEFAULT_TIMEOUT=100
    container_name: sentient-core-streamlit
    command: poetry run streamlit run app/main.py --server.port=8501 --server.address=0.0.0.0
    ports:
      - "8501:8501"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=sqlite:///./memory_management.db
      - VECTOR_DB_PATH=./memory_vectors
      - POETRY_HTTP_TIMEOUT=300
    volumes:
      - ./.env:/app/.env
      - ./memory_management.db:/app/memory_management.db
      - ./memory_vectors:/app/memory_vectors
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - sentient-network

networks:
  sentient-network:
    driver: bridge 