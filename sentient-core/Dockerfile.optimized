# Multi-stage build for better caching and faster builds
FROM python:3.11-slim as base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables for better pip performance
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PYTHONUNBUFFERED=1

# Upgrade pip and install wheel for better package installation
RUN pip install --upgrade pip wheel setuptools

# Stage 1: Install heavy dependencies first (for better caching)
FROM base as deps

WORKDIR /app

# Copy only requirements first for better layer caching
COPY requirements.txt .

# Install dependencies in stages for better caching
# First, install basic dependencies
RUN pip install --no-cache-dir \
    fastapi \
    uvicorn[standard] \
    pydantic \
    python-dotenv \
    numpy

# Then install AI/ML dependencies (these are the heavy ones)
RUN pip install --no-cache-dir \
    langchain \
    langgraph \
    groq \
    google-generativeai \
    pyautogen

# Finally install vector/search dependencies
RUN pip install --no-cache-dir \
    chromadb \
    sentence-transformers \
    tavily-python \
    exa-py \
    duckduckgo-search \
    faiss-cpu

# Stage 2: Final application stage
FROM base as app

WORKDIR /app

# Copy installed packages from deps stage
COPY --from=deps /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=deps /usr/local/bin /usr/local/bin

# Copy application code
COPY . .

# Expose port for FastAPI
EXPOSE 8000

# Command to run the application
CMD ["uvicorn", "app.api.app:app", "--host", "0.0.0.0", "--port", "8000"] 