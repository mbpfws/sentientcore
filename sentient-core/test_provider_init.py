#!/usr/bin/env python3
"""
Test script to isolate which LLM provider is causing the hang during initialization.
"""

import sys
import os

# Add the project root to Python path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

print("Starting provider initialization test...")

try:
    print("1. Testing basic imports...")
    from dotenv import load_dotenv
    load_dotenv()
    print("‚úì Basic imports successful")
    
    print("2. Testing Groq import...")
    from groq import Groq
    print("‚úì Groq import successful")
    
    print("3. Testing OpenAI import...")
    from openai import OpenAI
    print("‚úì OpenAI import successful")
    
    print("4. Testing EnhancedGroqProvider import...")
    from core.services.enhanced_llm_service import EnhancedGroqProvider
    print("‚úì EnhancedGroqProvider import successful")
    
    print("5. Testing EnhancedGroqProvider initialization...")
    if os.getenv("GROQ_API_KEY"):
        groq_provider = EnhancedGroqProvider()
        print("‚úì EnhancedGroqProvider initialized successfully")
    else:
        print("‚ö† GROQ_API_KEY not set, skipping Groq provider initialization")
    
    print("6. Testing OpenAIProvider import...")
    from core.services.enhanced_llm_service import OpenAIProvider
    print("‚úì OpenAIProvider import successful")
    
    print("7. Testing OpenAIProvider initialization...")
    if os.getenv("OPENAI_API_KEY"):
        openai_provider = OpenAIProvider()
        print("‚úì OpenAIProvider initialized successfully")
    else:
        print("‚ö† OPENAI_API_KEY not set, skipping OpenAI provider initialization")
    
    print("8. Testing EnhancedLLMService import...")
    from core.services.enhanced_llm_service import EnhancedLLMService
    print("‚úì EnhancedLLMService import successful")
    
    print("9. Testing EnhancedLLMService initialization...")
    enhanced_service = EnhancedLLMService()
    print("‚úì EnhancedLLMService initialized successfully")
    
    print("\nüéâ All provider tests completed successfully!")
    
except Exception as e:
    print(f"\n‚ùå Error during provider initialization: {e}")
    import traceback
    print(f"Full traceback: {traceback.format_exc()}")
    sys.exit(1)